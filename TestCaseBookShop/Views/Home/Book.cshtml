
<div id="body" class="d-none">
    <div class="d-flex justify-content-between mb-3 mt-5">
        <div class="d-flex justify-content-start">
            <button class="dx-btn dx-widget" id="openPopupButton">Yeni Kitap Ekle</button>
        </div>

        <div class="d-flex justify-content-end">
            <input type="text" id="searchBox" placeholder="Ara..." class="form-control">
        </div>
    </div>

    <div id="dataGridContainer"></div>

    <div id="bookPopup" class="dx-popup">
        <div class="dx-popup-content">
            <div id="bookForm"></div>
        </div>
    </div>

    <div id="categoryPopup" class="dx-popup">
        <div class="dx-popup-content">
            <div id="categoryForm"></div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        const token = localStorage.getItem("token");
        var jwt = parseJwt(token);
        
        $(function () {
            if(token){
                $("#body").removeClass("d-none");
            }else{
                $("#body").addClass("d-none");
                alert("Yetkisiz Erişim. Giriş sayfasına yönlendiriliyorsunuz.");
                window.location.href = "/Home/Login";
            }
        });

        var bookPopup;
        var categoryPopup;

        $(function () {
            getRefreshDataGrid();

            bookPopup = genericPopup(
                bookPopup,
                "#bookPopup",
                function () {
                    getCategories();
                },
                function () {
                        var formData = $("#bookForm").dxForm("instance").option("formData");

                        if (formData.id) {
                            formData.UpdatedByID = jwt.sub;
                        } else {
                            formData.CreatedByID = jwt.sub;
                        }

                        var url = formData.id ? '/Book/UpdateBook' : '/Book/CreateBook';
                        var type = formData.id ? 'PUT': 'POST';

                        genericAjax(
                            url,
                            type,
                            JSON.stringify(formData),
                            'application/json',
                            function (data) {
                                if (data.success) {
                                    bookPopup.hide();
                                    getRefreshDataGrid();
                                } else {
                                    alert('Failed to save book!');
                                }
                            },
                            function (xhr, status, error) {
                                if (xhr.status === 401) {
                                    alert("Yetkilendirme hatası. Lütfen giriş yapın.");
                                    window.location.href = "/Home/Login";
                                } else {
                                        alert("Bir hata oluştu: " + error.message);
                                }
                            }
                        );
                }
            );

            $("#bookForm").dxForm({
                items: [
                    {
                        dataField: "Title",
                        editorType: "dxTextBox",
                        label: { text: "İçerik" },
                        validationRules: [{ type: "required", message: "İçerik alanı boş bırakılamaz!" }],
                        editorOptions: {
                            placeholder: "İçeriği Giriniz"
                        }
                    },
                    {
                        dataField: "Author",
                        editorType: "dxTextBox",
                        label: { text: "Yazar" },
                        validationRules: [{ type: "required", message: "Yazar alanı boş bırakılamaz!" }],
                        editorOptions: {
                            placeholder: "Yazarı Giriniz"
                        }
                    },
                    {
                        dataField: "Price",
                        editorType: "dxNumberBox",
                        label: { text: "Fiyat" },
                        validationRules: [{ type: "required", message: "Fiyat alanı boş bırakılamaz!" }],
                        editorOptions: {
                            placeholder: "Fiyatı Giriniz",
                            min: 0
                        }
                    },
                    {
                        dataField: "Stock",
                        editorType: "dxNumberBox",
                        label: { text: "Stok" },
                        validationRules: [{ type: "required", message: "Stok alanı boş bırakılamaz!" }],
                        editorOptions: {
                            placeholder: "Stok Adedini Giriniz",
                            min: 0
                        }
                    },
                    {
                        dataField: "CategoryID",
                        editorType: "dxSelectBox",
                        label: { text: "Kategori" },
                        validationRules: [{ type: "required", message: "Kategori alanı boş bırakılamaz!" }],
                        editorOptions: {
                            placeholder: "Kategoriyi Seçiniz",
                            displayExpr: "name",
                            valueExpr: "id",
                            dataSource: [],
                            buttons: [
                                "dropDown",
                                {
                                    name: "addCategory",
                                    location: "after",
                                    stylingMode: "underlined",
                                    options: {
                                        icon: "plus",
                                        hint: "Yeni Kategori Ekle",
                                        onClick: function () {
                                            openCategoryPopup(null);
                                        }
                                    }
                                }

                            ],
                            itemTemplate: function(data) {
                                    var $item = $("<div>").addClass("d-flex justify-content-between align-items-center p-2");

                                    var $categoryName = $("<span>").text(data.name);

                                    var $buttonsContainer = $("<div>").addClass("d-flex ml-auto");

                                    var $editButton = $("<button>")
                                        .addClass("btn d-inline-block w-auto h-auto p-1")
                                        .append($("<img>")
                                            .attr("src", "/Resources/edit.png")
                                            .attr("alt", "Düzenle")
                                            .css({ "width": "20px", "height": "20px" }))
                                        .on("click", function() {
                                            openCategoryPopup(data);
                                            console.log("Düzenle butonuna tıklandı: " + data.id);
                                        });

                                    var $deleteButton = $("<button>")
                                        .addClass("btn d-inline-block w-auto h-auto p-1")
                                        .append($("<img>")
                                            .attr("src", "/Resources/delete.png")
                                            .attr("alt", "Sil")
                                            .css({ "width": "20px", "height": "20px" }))
                                        .on("click", function() {
                                            deleteCategory(data);
                                        });

                                    $buttonsContainer.append($editButton).append($deleteButton);

                                    $item.append($categoryName).append($buttonsContainer);

                                    return $item;
                            }
                        }
                    }
                ]
            });

            $("#openPopupButton").dxButton({
                text: "Yeni Kitap Ekle",
                onClick: function () {
                    openBookPopup(null);
                }
            });

            categoryPopup = genericPopup(
                categoryPopup,
                "#categoryPopup",
                null,
                function () {

                        var formData = $("#categoryForm").dxForm("instance").option("formData");
                        var url = formData.id ? '/Category/UpdateCategory' : '/Category/CreateCategory';
                        var type = formData.id ? 'PUT': 'POST';

                        if (formData.id) {
                            formData.UpdatedByID = jwt.sub;
                        } else {
                            formData.CreatedByID = jwt.sub;
                        }

                        genericAjax(
                            url,
                            type,
                            formData,
                            undefined,
                            function (data) {
                                if (data.success) {
                                    categoryPopup.hide();
                                    getCategories();
                                } else {
                                    alert('Kategori kaydedilemedi!');
                                }
                            },
                            function (error) {
                                alert(error.message);
                            }
                        );
                }
            );

            $("#categoryForm").dxForm({
                formData: {
                    name: ""
                },
                items: [
                    {
                        dataField: "name",
                        editorType: "dxTextBox",
                        label: { text: "Kategori Adı" },
                        validationRules: [{ type: "required", message: "Ad alanı boş bırakılamaz!" }],
                        editorOptions: {
                            placeholder: "Kategori adını giriniz"
                        }
                    }
                ]
            });
        });

        function getRefreshDataGrid() {

                genericAjax(
                    '/Book/GetBooks',
                    'GET',
                    null,
                    undefined,
                    function (data) {
                      if (data.success) {
                          $("#dataGridContainer").dxDataGrid({
                              dataSource: data.books,
                              filterRow: { visible: true },
                              headerFilter: { visible: true },
                              // searchPanel: { DevExtreme'in kendi searchPanel i
                              //     visible: true,
                              //     width: 240,
                              //     placeholder: 'Ara...',
                              // },
                              columns: [
                                  { dataField: "title", caption: "Başlık" },
                                  { dataField: "author", caption: "Yazar" },
                                  { dataField: "price", caption: "Fiyat"},
                                  { dataField: "stock", caption: "Stok" },
                                  { dataField: "category.name", caption: "Kategori" },
                                  { dataField: "createdAt", caption: "Oluşturma Tarihi", dataType: "date", format: "dd.MM.yyyy HH:mm"},
                                  {
                                    caption: "İşlemler",
                                    width: "auto",
                                    cellTemplate: function (container, options) {
                                   var editButton = $("<button>")
                                            .addClass("btn d-inline-block w-auto h-auto p-1")
                                            .append($("<img>")
                                                .attr("src", "/Resources/edit.png")
                                                .attr("alt", "Düzenle")
                                                .css({ "width": "20px", "height": "20px" }))
                                            .on("click", function () {
                                                openBookPopup(options.data);
                                            });

                                   var deleteButton = $("<button>")
                                            .addClass("btn d-inline-block w-auto h-auto p-1")
                                            .append($("<img>")
                                                .attr("src", "/Resources/delete.png")
                                                .attr("alt", "Sil")
                                                .css({ "width": "20px", "height": "20px" }))
                                            .on("click", function () {
                                                deleteBook(options.data);
                                            });

                                $("<div>").append(editButton).append(deleteButton).appendTo(container);
                                }
                              },
                              ],
                              showBorders: true
                          });

                          var dataGrid = $("#dataGridContainer").dxDataGrid("instance");

                          dataGrid.refresh();

                          $("#searchBox").on("keyup", function () {
                                            var value = $(this).val().toLowerCase();

                                            if (value.length === 0) {
                                               dataGrid.clearFilter();
                                            } else {

                                               dataGrid.filter([
                                                    ["title", "contains", value],
                                                    "or",
                                                    ["author", "contains", value],
                                                    "or",
                                                    "or",
                                                    ["price", "contains", value],
                                                    "or",
                                                    ["stock", "contains", value],
                                                    "or",
                                                    ["category.name", "contains", value]
                                                ]);
                                            }
                          });
                      } else {
                          alert('Kitaplar alınamadı!');
                      }
                    },
                    function (xhr, status ,error) {
                        if (xhr.status === 401) {
                            alert("Yetkilendirme hatası. Lütfen giriş yapın.");
                            window.location.href = "/Home/Login";
                        } else {
                                alert("Bir hata oluştu: " + error.message);
                        }
                    }
                );
        }

        function getCategories(){
            genericAjax(
                    '/Category/GetCategories',
                    'GET',
                    null,
                    undefined,
                    function (data) {
                        if (data.success) {
                            var categorySelectBox = $("#bookForm").dxForm("instance").getEditor("CategoryID");
                            categorySelectBox.option("dataSource", data.categories);
                        } else {
                            console.error("Kategoriler getirilemedi.");
                        }
                    },
                   function (xhr, status,error) {
                        if (xhr.status === 401) {
                            alert("Yetkilendirme hatası. Lütfen giriş yapın.");
                            window.location.href = "/Home/Login";
                        } else {
                                alert("Bir hata oluştu: " + error.message);
                        }
                    }
            );
        }

        function openBookPopup(bookData) {
            if (!bookData) {
                bookPopup.option("title", "Yeni Kitap Ekle");
                $("#bookForm").dxForm("instance").option("formData", {});
                bookPopup.show();
            } else {
                genericAjax(
                    '/Book/GetBook/' + bookData.id,
                    'GET',
                    null,
                    undefined,
                    function (data) {
                        if (data.success) {
                            bookPopup.option("title", "Kitabı Düzenle");
                            $("#bookForm").dxForm("instance").option("formData", {
                                    id: data.book.id,
                                    Title: data.book.title,
                                    Author: data.book.author,
                                    Price: data.book.price,
                                    Stock: data.book.stock,
                                    CategoryID: data.book.categoryID
                            });
                            bookPopup.show();
                        } else {
                            alert('Kitap alınamadı!');
                        }
                    },
                    function (error) {
                        if (xhr.status === 401) {
                            alert("Yetkilendirme hatası. Lütfen giriş yapın.");
                            window.location.href = "/Home/Login";
                        } else {
                                alert("Bir hata oluştu: " + error.message);
                        }
                    }
                );
            }
        }

        function deleteBook(bookData) {
            if (confirm("Kitap silinsin mi?")) {

                genericAjax(
                    '/Book/DeleteBook/' + bookData.id,
                    'DELETE',
                    jwt.sub,
                    undefined,
                    function (data) {
                            if (data.success) {
                                getRefreshDataGrid();
                            } else {
                                alert(data.message);
                            }
                    },
                    function (error) {
                        if (xhr.status === 401) {
                            alert("Yetkilendirme hatası. Lütfen giriş yapın.");
                            window.location.href = "/Home/Login";
                        } else {
                            alert("Bir hata oluştu: " + error.message);
                        }
                    }
                );
            }
        }

        function openCategoryPopup(categoryData) {
            console.log(categoryData);

            if (!categoryData) {
                categoryPopup.option("title", "Yeni Kategori Ekle");
                $("#categoryForm").dxForm("instance").option("formData", {});
                categoryPopup.show();
            } else {
            genericAjax(
                '/Category/GetCategory/' + categoryData.id,
                'GET',
                null,
                undefined,
                function (data) {
                    if (data.success) {
                        categoryPopup.option("title", "Kategoriyi Düzenle");
                        $("#categoryForm").dxForm("instance").option("formData", {
                            id: data.category.id,
                            name: data.category.name
                        });
                        categoryPopup.show();
                    } else {
                        alert('Kategori alınamadı!');
                    }
                },
                function (error) {
                    if (xhr.status === 401) {
                        alert("Yetkilendirme hatası. Lütfen giriş yapın.");
                        window.location.href = "/Home/Login";
                    } else {
                        alert("Bir hata oluştu: " + error.message);
                    }
                }
            );
            }
        }

        function deleteCategory(categoryData) {
            if (confirm("Kategori silinsin mi?")) {
                genericAjax(
                    '/Category/DeleteCategory/' + categoryData.id,
                    'DELETE',
                    null,
                    undefined,
                    function (data) {
                        if (data.success) {
                            getCategories();
                        } else {
                            alert(data.message);
                        }
                    },
                    function (error) {
                       if (xhr.status === 401) {
                            alert("Yetkilendirme hatası. Lütfen giriş yapın.");
                            window.location.href = "/Home/Login";
                       } else {
                            alert("Bir hata oluştu: " + error.message);
                       }
                    }
                );
            }
        }

        function genericAjax(url, method, data, contentType, successFunc, errorFunc){
                            $.ajax({
                                url: url,
                                type: method,
                                data: data,
                                contentType: contentType,
                                headers:{
                                    'Authorization': 'Bearer ' + localStorage.getItem('token')
                                },
                                success: successFunc,
                                error: errorFunc,
                            });
        }

        function genericPopup(popup, id, onShowing, buttonFunc){
            popup = $(id).dxPopup({
                visible: false,
                showTitle: true,
                title:"",
                width: "auto",
                height: "auto",
                dragEnabled: false,
                hideOnOutsideClick: false,
                deferRendering: false,
                onShowing: onShowing,
                toolbarItems: [{
                    widget: "dxButton",
                    location: "after",
                    options: {
                        text: "Save",
                        onClick: buttonFunc
                    }
                }]
            }).dxPopup("instance");

            return popup;
        }

        function parseJwt (token) {
            var base64Url = token.split('.')[1];
            var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
            var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function(c) {
                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
            }).join(''));

            return JSON.parse(jsonPayload);
        }
    </script>
}